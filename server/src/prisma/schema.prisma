datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  phone     String    @unique
  firstName String
  lastName  String
  address   String
  password  String
  products  Product[] //prodcuts created by the user
  transactions Transaction[] // Transactions (buying/renting) made by the user
  refreshToken RefreshToken[]
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  price       Float
  category    Category
  createdAt   DateTime @default(now())
  isAvailable Boolean  @default(true)  //By default, all new products are available
  transactions Transaction[] // Transactions (buying/renting) made on the product
  userId      Int
  creator     User     @relation(fields: [userId], references: [id])
}

model Transaction {
  id           Int           @id @default(autoincrement())
  type         TransactionType // Can be either BUY or RENT
  productId    Int
  product      Product        @relation(fields: [productId], references: [id]) // The product being rented/purchased
  buyerId      Int
  buyer        User           @relation(fields: [buyerId], references: [id]) // User who rented/bought the product
  startDate    DateTime       // Start date of the rental (or purchase time for BUY)
  endDate      DateTime       // End date for rentals. (Should always be set for RENT transactions.)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
}

enum Category {
  ELECTRONICS
  FURNITURE
  HOME_APPLIANCES
  SPORTING_GOODS
  OUTDOOR
  TOYS
}

enum TransactionType {
  BUY
  RENT
}
